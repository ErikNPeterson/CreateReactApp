{"ast":null,"code":"import _classCallCheck from \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MovieRow from './MovieRow';\nimport $ from 'jquery';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {}; // console.log(\"this is my initializer\");\n    // const movies = [\n    //   {id: 0, poster_src: \"https://upload.wikimedia.org/wikipedia/en/4/4d/Avengers_Infinity_War_poster.jpg\", title: \"Avengers: Infinity War\", overview: \"As the bla bla blah AND THEN MORE BLAH BLAH BLAH... Thanos win's!\"},\n    //   {id: 1, poster_src: \"https://upload.wikimedia.org/wikipedia/en/f/f9/TheAvengers2012Poster.jpg\", title: \"The Avengers\", overview: \"This is my second overview\"},\n    // ]\n    // var movieRows = [];\n    // movies.forEach((movie) => {\n    //   console.log(movie.title)\n    //   const movieRow = <MovieRow movie={movie} />\n    //   movieRows.push(movieRow)\n    // })\n    // this.state ={rows: movieRows}\n\n    _this.performSearch(\"ant man\");\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"performSearch\",\n    value: function performSearch(searchTerm) {\n      var _this2 = this;\n\n      console.log(\"Perform search using moviedb\");\n      var urlString = \"https://api.themoviedb.org/3/search/movie?api_key=228d2a3b60dddb8c258df6928f086459&query=\" + searchTerm;\n      $.ajax({\n        url: urlString,\n        success: function success(searchResults) {\n          console.log(\"Fetched data successfully\"); // console.log(searchResults)\n\n          var results = searchResults.results; // console.log(results[0]);\n\n          var movieRows = [];\n          results.forEach(function (movie) {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185/\" + movie.poster_path;\n            console.log(movie.poster_path);\n            var movieRow = React.createElement(MovieRow, {\n              key: movie.id,\n              movie: movie,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            });\n            movieRows.push(movieRow);\n          });\n\n          _this2.setState({\n            rows: movieRows\n          });\n        },\n        error: function error(xhr, status, err) {\n          console.error(\"Failed to fetch data\");\n        }\n      });\n    }\n  }, {\n    key: \"searchChangeHandler\",\n    value: function searchChangeHandler(event) {\n      console.log(event.target.value);\n      var boundObject = this;\n      var searchTerm = event.target.value;\n      boundObject.performSearch(searchTerm);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"titleBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"app icon\",\n        width: \"100\",\n        src: \"image2vector.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Movies DB Search\"))))), React.createElement(\"input\", {\n        style: {\n          fontSize: 24,\n          display: 'block',\n          width: \"99%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 50\n        },\n        onChange: this.searchChangeHandler.bind(this),\n        placeholder: \"Enter search term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), this.state.rows);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/erikpeterson/lighthouse/createReactApp/movieSearcher/src/App.js"],"names":["React","Component","MovieRow","$","App","props","state","performSearch","searchTerm","console","log","urlString","ajax","url","success","searchResults","results","movieRows","forEach","movie","poster_src","poster_path","movieRow","id","push","setState","rows","error","xhr","status","err","event","target","value","boundObject","fontSize","display","width","paddingTop","paddingBottom","paddingLeft","searchChangeHandler","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb,CAFiB,CAGjB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,UAAKC,aAAL,CAAmB,SAAnB;;AAnBiB;AAoBlB;;;;kCAEaC,U,EAAW;AAAA;;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAMC,SAAS,GAAG,8FAA8FH,UAAhH;AACAL,MAAAA,CAAC,CAACS,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAEF,SADA;AAELG,QAAAA,OAAO,EAAC,iBAACC,aAAD,EAAmB;AACzBN,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADyB,CAEzB;;AACA,cAAMM,OAAO,GAAGD,aAAa,CAACC,OAA9B,CAHyB,CAIzB;;AAEA,cAAIC,SAAS,GAAG,EAAhB;AAEAD,UAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,KAAD,EAAW;AACzBA,YAAAA,KAAK,CAACC,UAAN,GAAmB,qCAAqCD,KAAK,CAACE,WAA9D;AACAZ,YAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACE,WAAlB;AACA,gBAAMC,QAAQ,GAAG,oBAAC,QAAD;AAAU,cAAA,GAAG,EAAEH,KAAK,CAACI,EAArB;AAAyB,cAAA,KAAK,EAAEJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AACAF,YAAAA,SAAS,CAACO,IAAV,CAAeF,QAAf;AACD,WALD;;AAOA,UAAA,MAAI,CAACG,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAET;AAAP,WAAd;AACD,SAlBI;AAmBHU,QAAAA,KAAK,EAAE,eAACC,GAAD,EAAMC,MAAN,EAAcC,GAAd,EAAsB;AAC3BrB,UAAAA,OAAO,CAACkB,KAAR,CAAc,sBAAd;AACH;AArBI,OAAP;AAwBD;;;wCAEmBI,K,EAAM;AACxBtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA,UAAMC,WAAW,GAAG,IAApB;AACA,UAAM1B,UAAU,GAAGuB,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACAC,MAAAA,WAAW,CAAC3B,aAAZ,CAA0BC,UAA1B;AACD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,UAAT;AAAoB,QAAA,KAAK,EAAC,KAA1B;AAAgC,QAAA,GAAG,EAAC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAI,QAAA,KAAK,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CALF,CADF,CADF,CADF,EAeE;AAAO,QAAA,KAAK,EAAE;AACZ2B,UAAAA,QAAQ,EAAE,EADE;AAEZC,UAAAA,OAAO,EAAE,OAFG;AAGZC,UAAAA,KAAK,EAAE,KAHK;AAIZC,UAAAA,UAAU,EAAE,CAJA;AAKZC,UAAAA,aAAa,EAAE,CALH;AAMZC,UAAAA,WAAW,EAAE;AAND,SAAd;AAOG,QAAA,QAAQ,EAAE,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAPb;AAOiD,QAAA,WAAW,EAAC,mBAP7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAwBG,KAAKpC,KAAL,CAAWoB,IAxBd,CADF;AA+BD;;;;EA1FezB,S;;AA6FlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MovieRow from './MovieRow'\nimport $ from 'jquery'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // console.log(\"this is my initializer\");\n\n    // const movies = [\n    //   {id: 0, poster_src: \"https://upload.wikimedia.org/wikipedia/en/4/4d/Avengers_Infinity_War_poster.jpg\", title: \"Avengers: Infinity War\", overview: \"As the bla bla blah AND THEN MORE BLAH BLAH BLAH... Thanos win's!\"},\n    //   {id: 1, poster_src: \"https://upload.wikimedia.org/wikipedia/en/f/f9/TheAvengers2012Poster.jpg\", title: \"The Avengers\", overview: \"This is my second overview\"},\n    // ]\n    \n    // var movieRows = [];\n    // movies.forEach((movie) => {\n    //   console.log(movie.title)\n    //   const movieRow = <MovieRow movie={movie} />\n    //   movieRows.push(movieRow)\n    // })\n\n    // this.state ={rows: movieRows}\n\n    this.performSearch(\"ant man\");\n  }\n\n  performSearch(searchTerm){\n    console.log(\"Perform search using moviedb\")\n    const urlString = \"https://api.themoviedb.org/3/search/movie?api_key=228d2a3b60dddb8c258df6928f086459&query=\" + searchTerm ;\n    $.ajax({\n      url: urlString,\n      success:(searchResults) => {\n        console.log(\"Fetched data successfully\");\n        // console.log(searchResults)\n        const results = searchResults.results\n        // console.log(results[0]);\n\n        var movieRows = []; \n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185/\" + movie.poster_path;\n          console.log(movie.poster_path);\n          const movieRow = <MovieRow key={movie.id} movie={movie}/>\n          movieRows.push(movieRow)\n        })\n\n        this.setState({rows: movieRows})\n      },\n        error: (xhr, status, err) => {\n          console.error(\"Failed to fetch data\");\n      }\n    })\n\n  }\n\n  searchChangeHandler(event){\n    console.log(event.target.value)\n    const boundObject = this\n    const searchTerm = event.target.value\n    boundObject.performSearch(searchTerm);\n  }\n  render() {\n    return (\n      <div>\n        <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              <td>\n                <img alt=\"app icon\" width=\"100\" src=\"image2vector.svg\"/>\n              </td>\n              <td width=\"15\"/>\n              <td>\n                <h1>Movies DB Search</h1>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <input style={{\n          fontSize: 24,\n          display: 'block',\n          width: \"99%\",\n          paddingTop: 8,\n          paddingBottom: 8,\n          paddingLeft: 50,\n        }} onChange={this.searchChangeHandler.bind(this)}placeholder=\"Enter search term\"/>  \n\n        {this.state.rows}\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}